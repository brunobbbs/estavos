# -*- coding: utf-8 -*-
# Generated by Django 1.10.8 on 2018-01-10 15:16
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    """
    This migrations was reseted. Follow the steps bellow to apply on a existing database:

    1. uncheck all migrations: python manage.py migrate --fake tournaments zero
    2. check it with: python manage.py showmigrations
    3. remove migrations or update repository
    4. check it with: python manage.py showmigrations
    5. create initial migration or update repository
    6. fake initial migration: python manage.py migrate --fake-initial
    """
    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Competitor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome do atleta')),
                ('birth', models.DateField(verbose_name='Data de nascimento')),
                ('id_lbx', models.CharField(blank=True, max_length=7, verbose_name='ID LBX')),
                ('id_fide', models.CharField(blank=True, help_text='Opcional. Informe se tiver um ID FIDE.', max_length=10, verbose_name='ID FIDE')),
                ('club', models.CharField(blank=True, max_length=100, verbose_name='Escola/Clube')),
            ],
        ),
        migrations.CreateModel(
            name='Inscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome do responsável')),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=15, verbose_name='Telefone')),
                ('confirmed', models.BooleanField(default=False, verbose_name='Confirmado?')),
                ('slug', models.SlugField(max_length=32, unique=True, verbose_name='Cod. Inscrição')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Data/Hora inscrição')),
            ],
        ),
        migrations.CreateModel(
            name='InscriptionPrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Ex.: 1º Lote', max_length=50, verbose_name='Identificador')),
                ('full', models.DecimalField(decimal_places=2, default='30.00', max_digits=7, verbose_name='Valor da inteira')),
                ('half', models.DecimalField(blank=True, decimal_places=2, default='15.00', help_text='Opcional', max_digits=7, null=True, verbose_name='Valor da meia')),
                ('limit_date', models.DateTimeField(verbose_name='Válido para inscrições realizadas até')),
                ('active', models.BooleanField(verbose_name='Ativo?')),
                ('notes', models.TextField(blank=True, verbose_name='Observações')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paid', models.BooleanField(default=False, verbose_name='Pago?')),
                ('payment_type', models.CharField(choices=[('1', 'PagSeguro'), ('2', 'Depósito bancário/Transferência'), ('3', 'Isenção')], default='1', max_length=1, verbose_name='Forma de pagamento')),
                ('receipt', models.FileField(blank=True, null=True, upload_to='payments/receipts/', verbose_name='Recibo')),
                ('status', models.CharField(choices=[('1', 'Aguardando pagamento'), ('2', 'Em análise'), ('3', 'Paga'), ('4', 'Disponível'), ('5', 'Em disputa'), ('6', 'Devolvida'), ('7', 'Cancelada')], default='1', max_length=1)),
                ('transaction', models.CharField(blank=True, max_length=150)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Prize',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Nome do prêmio')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('icon', models.CharField(blank=True, max_length=15, verbose_name='Font-awesome icon. Ex.: "fa-trophy"')),
            ],
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Nome do evento')),
                ('short_description', models.CharField(blank=True, max_length=250, verbose_name='Descrição curta')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('modality', models.CharField(choices=[('classic', 'Clássico'), ('rapid', 'Rápido'), ('blitz', 'Relâmpago')], default='rapid', max_length=7, verbose_name='Modalidade')),
                ('objective', models.TextField(blank=True, verbose_name='Objetivos')),
                ('start_date', models.DateTimeField(verbose_name='Início')),
                ('end_date', models.DateTimeField(verbose_name='Previsão de término')),
                ('inscriptions_date_limit', models.DateTimeField(verbose_name='Data limite para inscrições')),
                ('active', models.BooleanField(verbose_name='Ativo?')),
                ('place', models.CharField(max_length=50, verbose_name='Local')),
                ('google_maps', models.TextField(blank=True, help_text='Insira um iframe do Google maps', verbose_name='Mapa do local do evento')),
                ('rule', models.URLField(verbose_name='Link para download do regulamento')),
                ('slug', models.SlugField(unique=True)),
                ('price', models.DecimalField(decimal_places=2, default='25.00', max_digits=7, verbose_name='Valor da inscrição')),
                ('chess_results', models.URLField(blank=True, verbose_name='Link para o ChessResults')),
                ('pairing', models.CharField(blank=True, help_text='Ex.: Suíço em 6 rodadas.', max_length=30, verbose_name='Sistema de disputa')),
                ('game_time', models.CharField(blank=True, help_text="Ex.: 60'K.O", max_length=150, verbose_name='Tempo de reflexão')),
                ('notes', models.TextField(blank=True, verbose_name='Observações gerais')),
                ('flyer', models.ImageField(blank=True, null=True, upload_to='tournaments/flyers/', verbose_name='Folder do evento')),
            ],
        ),
        migrations.CreateModel(
            name='TournamentSchedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Data')),
                ('hour', models.TimeField(verbose_name='Hora')),
                ('activity', models.CharField(max_length=140, verbose_name='Atividade')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournaments.Tournament')),
            ],
            options={
                'verbose_name': 'programação',
                'verbose_name_plural': 'programações',
            },
        ),
        migrations.AddField(
            model_name='prize',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prizes', to='tournaments.Tournament'),
        ),
        migrations.AddField(
            model_name='inscriptionprice',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='available_prices', to='tournaments.Tournament'),
        ),
        migrations.AddField(
            model_name='inscription',
            name='payment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inscription', to='tournaments.Payment'),
        ),
        migrations.AddField(
            model_name='inscription',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inscriptions', to='tournaments.Tournament'),
        ),
        migrations.AddField(
            model_name='competitor',
            name='inscription',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='competitors', to='tournaments.Inscription'),
        ),
    ]
